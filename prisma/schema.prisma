generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database/db.db"
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String?
  lastName     String?
  email        String         @unique
  password     String
  roleId       Int
  session      Session[]
  role         Role           @relation(fields: [roleId], references: [id])
  image        Image          @relation(fields: [imageId], references: [id])
  imageId      Int
  Course       Course[]
  CourseRating CourseRating[]
}

model Image {
  id            Int      @id @default(autoincrement())
  url           String
  createdAt     DateTime @default(now())
  bucketImageId String   @unique
  User          User[]
  Video         Video[]
  Course        Course[]
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int
  refreshToken String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model Video {
  id            Int    @id @default(autoincrement())
  url           String
  lengthSec     Int
  name          String
  description   String
  index         Int
  bucketVideoId String @unique

  thumbnail   Image   @relation(fields: [thumbnailId], references: [id])
  Course      Course? @relation(fields: [courseId], references: [id])
  courseId    Int?
  thumbnailId Int
}

model Course {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  videos       Video[]
  thumbnail    Image          @relation(fields: [thumbnailId], references: [id])
  thumbnailId  Int
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  category     String?
  price        Float?
  CourseRating CourseRating[]
}

model CourseRating {
  id     Int @id @default(autoincrement())
  rating Int

  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int
}
